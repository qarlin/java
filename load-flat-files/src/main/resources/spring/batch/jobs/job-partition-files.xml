<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">
	
	<import resource="../config/context.xml" />
	<batch:job id="partitionJob" >
		<batch:step id="step">
			<partition step="step1" partitioner="partitioner">
				<handler grid-size="2" task-executor="taskExecutor" />
			</partition>
		</batch:step>
	</batch:job>

	<bean id="fileNameListener" class="com.partition.OutputFileListener" scope="step">
		<property name="path" value="file:csv/output/file/" />
	</bean>
	
	<bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<property name="resources" value="file:csv/input/domain-*.csv" />
	</bean>

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<batch:step id="step1" >
		<batch:tasklet transaction-manager="transactionManager">
			<batch:chunk writer="itemWriter" reader="itemReader"
				commit-interval="5" />
			<batch:listeners>
				<batch:listener ref="fileNameListener" />
			</batch:listeners>
		</batch:tasklet>
	</batch:step>

	<bean id="itemReader" scope="step" autowire-candidate="false"
		parent="itemReaderParent">
		<property name="resource" value="#{stepExecutionContext[fileName]}" />
	</bean>

	<bean id="domain" class="com.Domain" />

	<bean id="itemReaderParent" class="org.springframework.batch.item.file.FlatFileItemReader"
		abstract="true">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id, domain" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="resource" value="#{stepExecutionContext[outputFile]}" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
</beans>