<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:ejb.properties</value>
		</property>
	</bean>

	<util:properties id="env">
		<prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
		<prop key="java.naming.provider.url">http-remoting://localhost:8080</prop>
		<prop key="java.naming.security.principal">ejbuser</prop>
		<prop key="java.naming.security.credentials">ejbuser</prop>
		<prop key="jboss.naming.client.ejb.context">true</prop>
		<prop key="java.naming.factory.url.pkgs">org.jboss.ejb.client.naming</prop>
	</util:properties>

	<!-- Localthread EJB Connection -->
	<bean id="EJBService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource">
			<bean class="org.springframework.aop.target.ThreadLocalTargetSource"
				destroy-method="destroy">
				<property name="targetBeanName" value="localContext" />
			</bean>
		</property>
	</bean>

	<bean id="localContext" class="javax.naming.InitialContext" scope="prototype">
		<constructor-arg index="0" ref="env" />
	</bean>

	<!-- EJB Remote Bean, doesn't work with Wildfly -->
	<bean id="jndiRemote" class="org.springframework.jndi.JndiTemplate">
		<property name="environment" ref="env" />
	</bean>

	<bean id="ContractRemote" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiTemplate" ref="jndiRemote" />
		<property name="jndiName"
			value="batch-process-ejb/ContractEJB!ejb.ContractEJBRemote" />
	</bean>

	<!-- Factory -->
	<bean id="ServiceFactory"
		class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
		<property name="serviceLocatorInterface" value="ejbprocess.factory.ServiceFactory" />
	</bean>

	<alias name="CreateService" alias="CREATE" />

	<context:component-scan base-package="ejbprocess" />
	<aop:aspectj-autoproxy />

	<!-- AspectJ -->
	<!-- Logging -->
	<bean id="logAspect" class="ejbprocess.aop.LoggingAspect" />

	<!-- JAMon - Java Monitor Library only in TRACE -->
	<bean id="jamonPerformanceMonitorInterceptor"
		class="org.springframework.aop.interceptor.JamonPerformanceMonitorInterceptor">
		<property name="trackAllInvocations" value="true"></property>
		<property name="useDynamicLogger" value="true"></property>
	</bean>
		
	<aop:config>
		<!-- Adjust your expression as needed -->
		<aop:pointcut id="monitoringPointcut" expression="execution(* ejbprocess..*(..))" />
		<aop:pointcut id="monitoringPrivatePointcut" expression="execution(private * ejbprocess..*(..))" />
		<aop:advisor pointcut-ref="monitoringPointcut" advice-ref="jamonPerformanceMonitorInterceptor" />
		<aop:advisor pointcut-ref="monitoringPrivatePointcut" advice-ref="jamonPerformanceMonitorInterceptor" />
	</aop:config>


</beans>
